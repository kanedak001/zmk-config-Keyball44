#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(N) &kp T &kp T &kp D &kp A &kp T &kp A &kp N1 &kp EXCL>;
            label = "PW";
        };

        xa: xa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp X &kp A &kp N6 &kp N7 &kp E &kp J &kp Z &kp N2>;
            label = "XA";
        };
    };

    combos {
        compatible = "zmk,combos";

        mb3 {
            bindings = <&mkp MB3>;
            key-positions = <32 33>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&none         &kp Q             &kp W          &kp E      &kp R               &kp T                     &kp Y  &kp U  &kp I     &kp O     &kp P           &none
&none         &mt LCTRL A       &kp S          &kp D      &kp F               &kp G                     &kp H  &kp J  &kp K     &kp L     &mt RCTRL SEMI  &none
&kp LEFT_ALT  &mt LEFT_SHIFT Z  &kp X          &kp C      &kp V               &kp B                     &kp N  &kp M  &mkp MB1  &mkp MB2  &mt RSHFT RET   &kp LEFT_SHIFT
&kp LCTRL     &kp LALT          &kp LC(SPACE)  &lt 1 TAB  &mt LEFT_GUI SPACE             &kp BACKSPACE  &mo 1                                             &lt 5 ESCAPE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UP_ARROW     &kp PAGE_UP    &kp LA(LEFT)                         &kp N7        &kp N8        &kp N9        &kp N0     &kp MINUS   &none
&none         &kp HOME          &kp LEFT           &kp DOWN         &kp RIGHT      &kp END                              &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH  &kp APOS    &none
&kp LEFT_ALT  &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PAGE_DOWN  &kp LA(RIGHT_ARROW)                  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &kp PERIOD  &kp RIGHT_SHIFT
&trans        &trans            &pw                &mo 2            &kp DEL                                 &kp DELETE  &mo 3                                                            &kp GRAVE
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none         &kp LS(LEFT_BRACKET)  &kp LS(RBKT)          &kp UP_ARROW          &kp PG_UP      &kp LG(LC(RIGHT))                  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL          &none
&none         &kp LS(HOME)          &kp LEFT_ARROW        &kp DOWN              &kp RIGHT      &kp LS(END)                        &kp DOLLAR       &kp PERCENT   &kp CARET             &kp BACKSLASH          &kp DOUBLE_QUOTES  &none
&kp LEFT_ALT  &none                 &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp PAGE_DOWN  &kp LC(LG(LEFT))                   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp COMMA              &kp QUESTION       &kp RSHIFT
&trans        &trans                &pw                   &mo 3                 &kp DELETE                            &kp DELETE  &mo 3                                                                                          &kp TILDE
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none       &bt BT_SEL 0  &none        &none   &none   &none              &kp F7  &kp F8  &kp F9  &kp F10  &none  &none
&none       &bt BT_SEL 1  &none        &none   &none   &none              &kp F4  &kp F5  &kp F6  &kp F11  &none  &none
&bt BT_CLR  &bt BT_SEL 2  &none        &none   &none   &none              &kp F1  &kp F2  &kp F3  &kp F12  &none  &none
&trans      &trans        &bootloader  &trans  &trans             &trans  &trans                                  &none
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &none   &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
