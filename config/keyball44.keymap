#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ctrla: ctrla {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRLA";
            #binding-cells = <0>;
            bindings = <&mt LCTRL A>, <&kp LC(A)>;

            tapping-term-ms = <150>;
        };
    };

    macros {
        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(N) &kp T &kp T &kp D &kp A &kp T &kp A &kp N1 &kp EXCL>;
            label = "PW";
        };

        xa: xa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp X &kp A &kp N6 &kp N7 &kp E &kp J &kp Z &kp N2>;
            label = "XA";
        };

        paren: paren {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "PAREN";
        };
    };

    combos {
        compatible = "zmk,combos";

        mb3 {
            bindings = <&mkp MB3>;
            key-positions = <32 33>;
            layers = <0>;
        };

        ctrl-a {
            bindings = <&kp LC(A)>;
            key-positions = <13 14>;
        };

        ctrl-z {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
        };

        paren {
            bindings = <&paren>;
            key-positions = <39 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&none      &kp Q     &kp W           &kp E           &kp R            &kp T                                &kp Y            &kp U         &kp I            &kp O            &kp P      &none
&none      &kp A     &mt LEFT_GUI S  &mt LEFT_ALT D  &mt LSHIFT F     &mt LS(LCTRL) G                      &mt RS(RCTRL) H  &mt RSHIFT J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &kp MINUS  &none
&none      &kp Z     &kp X           &kp C           &kp V            &kp B                                &kp N            &kp M         &mkp MB1         &mkp MB2         &kp DOT    &none
&kp LCTRL  &kp LALT  &kp LC(SPACE)   &lt 2 TAB       &mt LCTRL SPACE                       &mt RCTRL BSPC  &lt 1 ENTER                                                                 &lt 5 ESCAPE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none   &caps_word  &kp LESS_THAN   &kp EQUAL          &kp GREATER_THAN  &kp CARET                            &kp AMPS            &kp N7               &kp N8            &kp N9              &kp AT       &none
&none   &kp SLASH   &mt LCMD ASTRK  &mt LEFT_ALT PLUS  &mt LSHIFT MINUS  &mt LS(LCTRL) UNDER                  &mt RS(RCTRL) PIPE  &mt RSHIFT NUMBER_4  &mt RIGHT_ALT N5  &mt RMETA NUMBER_6  &kp INT_YEN  &none
&none   &kp SEMI    &kp COLON       &kp QUESTION       &kp EXCL          &kp PERCENT                          &kp N0              &kp NUMBER_1         &kp NUMBER_2      &kp NUMBER_3        &kp COMMA    &none
&trans  &trans      &pw             &mo 3              &kp DEL                                    &kp DELETE  &mo 3                                                                                       &kp TILDE
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &kp LA(LEFT)  &kp LA(RIGHT)  &kp UP_ARROW       &kp PG_UP         &kp C_BRIGHTNESS_INC                  &kp C_VOLUME_UP       &kp LEFT_BRACKET             &kp SINGLE_QUOTE             &kp RIGHT_BRACKET            &kp AT         &none
&none   &kp HOME      &mt LCMD LEFT  &mt LEFT_ALT DOWN  &mt LSHIFT RIGHT  &mt LS(LCTRL) END                     &mt RS(RCTRL) C_MUTE  &mt RSHIFT LEFT_PARENTHESIS  &mt RIGHT_ALT DOUBLE_QUOTES  &mt RMETA RIGHT_PARENTHESIS  &kp HASH       &none
&none   &kp C_REWIND  &kp C_PLAY     &kp C_FF           &kp PAGE_DOWN     &kp C_BRIGHTNESS_DEC                  &kp C_VOL_DN          &kp LEFT_BRACE               &kp GRAVE                    &kp RIGHT_BRACE              &kp BACKSLASH  &none
&trans  &trans        &pw            &mo 3              &kp DELETE                                  &kp DELETE  &mo 3                                                                                                                       &kp TILDE
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none       &bt BT_SEL 0  &none        &none   &none   &none              &kp C_AL_CONTROL_PANEL  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none       &bt BT_SEL 1  &none        &none   &none   &none              &kp C_AL_CONTROL_PANEL  &kp F4  &kp F5  &kp F6  &kp F11  &none
&bt BT_CLR  &bt BT_SEL 2  &none        &none   &none   &none              &kp C_AL_CONTROL_PANEL  &kp F1  &kp F2  &kp F3  &kp F12  &none
&trans      &trans        &bootloader  &trans  &trans             &trans  &trans                                                   &none
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &none   &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
